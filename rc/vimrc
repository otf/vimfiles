set nocompatible               " be iMproved
set noswapfile
set nobackup
set noundofile
set number                   " 行番号を表示
set clipboard=unnamed        " yとかpとかdでクリップボードを使ってくれる
set list                     " 下のlcsに必須
set lcs=tab:^\               " タブ文字を分かりやすく表示(\の後に空白文字が必要)
set display=uhex             " 表示できない文字を16進表示
set ignorecase               " 下のsmartcaseに必須
set smartcase                " 基本大文字と小文字を無視して検索し、大文字が含まれる場合は無視せずに検索する
set incsearch                " インクリメンタルに検索する
set wrapscan                 " ドキュメントの下まで行ったら一番最初に戻って検索
set hlsearch                 " マッチした語をハイライト表示する

" tab character
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" encoding
"set encoding=utf-8
set fenc=utf-8

" move
for key in ['j', 'k', 'gg', 'G', '{', '}', '[', ']', '[(', '])',
            \ '[{', ']}', ']m', ']M', '[m', '[M', '[#', ']#', '[*', ']*', '[/', ']/',
            \ '%', 'H', 'L', 'w', 'W', 'e', 'ge', 'b', 'B', '<C-d>', '<C-u>', '<C-f>', '<C-b>']
    execute 'nnoremap ' . key . ' ' . key . 'zz'
endfor

"================================================================================
" vimrc & gvimrc {{{
"================================================================================

function! SourceIfExists(file)
    if filereadable(expand(a:file))
        execute 'source ' . a:file
    endif
    echo 'Reloaded vimrc and gvimrc.'
endfunction

let vimrcbody = '$HOME/_vimrc'
let gvimrcbody = '$HOME/_gvimrc'
function! OpenFile(file)
    let empty_buffer = line('$') == 1 && strlen(getline('1')) == 0
    if empty_buffer && !&modified
        execute 'e ' . a:file
    else
        execute 'tabnew ' . a:file
    endif
endfunction

command! OpenMyVimrc call OpenFile(vimrcbody)
command! OpenMyGVimrc call OpenFile(gvimrcbody)" open vimrc/gvimrc
" reload vimrc and gvimrc
nnoremap <F5> <Esc>:<C-u>source $MYVIMRC<CR>
            \ :source $MYGVIMRC<CR>
            \ :call SourceIfExists('~/vimfiles/ftplugin/' . &filetype . '.vim')<CR>
" open vimrc/gvimrc
nnoremap <Space><Space> :<C-u>OpenMyVimrc<CR>
nnoremap <Space><Tab> :<C-u>OpenMyGVimrc<CR>

"============================================================
" Unite
"============================================================
if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim
  call neobundle#rc(expand('~/.vim/bundle/'))
endif
" originalrepos on github
NeoBundle 'Shougo/neobundle.vim'
NeoBundle 'Shougo/vimproc'
NeoBundle 'VimClojure'
NeoBundle 'Shougo/vimshell'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/neocomplcache'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'jpalardy/vim-slime'
NeoBundle 'scrooloose/syntastic'

" for Haskell
NeoBundle 'kana/vim-filetype-haskell'
NeoBundle 'eagletmt/ghcmod-vim'
NeoBundle 'osyo-manga/vim-watchdogs'
NeoBundle 'thinca/vim-ref'
NeoBundle 'ujihisa/ref-hoogle'
NeoBundle 'lukerandall/haskellmode-vim'
""NeoBundle 'https://bitbucket.org/kovisoft/slimv'

" use ghc functionality for haskell files
au Bufenter *.hs compiler ghc

" switch on syntax highlighting
syntax on

" enable filetype detection, plus loading of filetype plugins
filetype plugin on

" configure browser for haskell_doc.vim
let g:haddock_browser = "C:/Program Files (x86)/Google/Chrome/Application/chrome.exe"

filetype plugin indent on     " required!
filetype indent on
syntax on
